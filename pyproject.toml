[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aider-lint-fixer"
dynamic = ["version"]
description = "AI-powered lint error detection and fixing using aider.chat"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Aider Lint Fixer Team", email = "tosin@decisioncrafters.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
]
requires-python = ">=3.11"
dependencies = [
    "aider-chat>=0.85.0",
    "click>=8.0.0",
    "colorama>=0.4.0",
    "pyyaml>=6.0.0",
    "pathlib2>=2.3.0; python_version<'3.4'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "coverage>=7.0.0",
    "mock>=4.0.0",
    "responses>=0.23.0",
]
linters = [
    "flake8>=7.3.0",
    "pylint>=3.3.0",
    "ansible-lint>=25.6.0",
]
learning = [
    "scikit-learn>=1.0.0",
    "requests>=2.25.0",
    "beautifulsoup4>=4.9.0",
    "pyahocorasick>=1.4.0",
]
progress = [
    "tqdm>=4.64.0",
]
community = [
    # Community issue reporting uses built-in webbrowser and urllib
    # No additional dependencies required
]
all = [
    "flake8>=7.3.0",
    "pylint>=3.3.0",
    "ansible-lint>=25.6.0",
    "scikit-learn>=1.0.0",
    "requests>=2.25.0",
    "beautifulsoup4>=4.9.0",
    "pyahocorasick>=1.4.0",
    "tqdm>=4.64.0",
]

[project.urls]
Homepage = "https://github.com/tosin2013/aider-lint-fixer"
Repository = "https://github.com/tosin2013/aider-lint-fixer"
Issues = "https://github.com/tosin2013/aider-lint-fixer/issues"
Documentation = "https://github.com/tosin2013/aider-lint-fixer/blob/main/README.md"

[project.scripts]
aider-lint-fixer = "aider_lint_fixer.main:main"

[tool.setuptools.dynamic]
version = {attr = "aider_lint_fixer.__version__"}

[tool.setuptools.packages.find]
where = ["."]
include = ["aider_lint_fixer*"]
exclude = ["tests*", "docs*", "scripts*"]

[tool.setuptools.package-data]
aider_lint_fixer = ["config/*.yaml", "templates/*.j2"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["aider_lint_fixer"]
known_third_party = [
    "aider",
    "click",
    "colorama",
    "yaml",
    "pytest",
]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# Flake8 configuration
[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    ".eggs",
    "*.egg",
]
per-file-ignores = [
    "__init__.py:F401",
    "test_*.py:F401,F811",
]

# MyPy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "aider.*",
    "colorama.*",
    "yaml.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["aider_lint_fixer"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__main__.py",
    "*/setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
