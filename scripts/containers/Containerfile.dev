# Development Container for aider-lint-fixer
# Based on Red Hat Enterprise Linux with Python 3.11
# Usage: podman build -f scripts/containers/Containerfile.dev -t aider-lint-fixer:dev .

FROM registry.access.redhat.com/ubi9/python-311:latest

# Metadata
LABEL name="aider-lint-fixer-dev" \
      version="1.9.0" \
      description="Development environment for aider-lint-fixer with all linters" \
      maintainer="Aider Lint Fixer Team <tosin@decisioncrafters.com>" \
      vendor="aider-lint-fixer" \
      summary="AI-powered lint error detection and fixing - Development Environment"

# Switch to root for package installation
USER 0

# Install system dependencies for all linters
RUN dnf update -y && \
    dnf install -y \
        git \
        curl \
        wget \
        nodejs \
        npm \
        vim \
        less \
        which \
        procps-ng \
        && dnf clean all

# Install Node.js linters globally
RUN npm install -g \
    eslint@8.57.1 \
    jshint@2.13.6 \
    prettier@3.6.2 \
    && npm cache clean --force

# Create application directory
WORKDIR /workspace

# Copy requirements first for better Docker layer caching
COPY requirements.txt requirements-test.txt ./
COPY pyproject.toml setup.py ./

# Switch back to default user for Python operations
USER 1001

# Upgrade pip and install Python dependencies
RUN pip install --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir -r requirements-test.txt

# Install Python linters with specific versions
RUN pip install --no-cache-dir \
    flake8==7.3.0 \
    pylint==3.3.7 \
    ansible-lint==25.6.1 \
    black>=23.0.0 \
    isort>=5.12.0 \
    mypy>=1.0.0 \
    bandit \
    safety

# Install aider-chat
RUN pip install --no-cache-dir "aider-chat>=0.85.0"

# Copy the entire project
COPY --chown=1001:0 . .

# Install aider-lint-fixer in development mode
RUN pip install --no-cache-dir -e ".[all]"

# Create cache directory for learning features
RUN mkdir -p .aider-lint-cache && chmod 755 .aider-lint-cache

# Verify installations
RUN echo "=== Python Version ===" && python --version && \
    echo "=== Python Linters ===" && \
    flake8 --version && \
    pylint --version && \
    ansible-lint --version && \
    echo "=== Node.js Linters ===" && \
    eslint --version && \
    jshint --version && \
    prettier --version && \
    echo "=== aider-lint-fixer ===" && \
    python -m aider_lint_fixer --version

# Environment variables for development
ENV PYTHONPATH=/workspace
ENV PATH="/home/default/.local/bin:$PATH"
ENV TERM=xterm-256color

# Development convenience aliases (via .bashrc)
RUN echo 'alias ll="ls -la"' >> ~/.bashrc && \
    echo 'alias lf="python -m aider_lint_fixer"' >> ~/.bashrc && \
    echo 'alias pytest-cov="pytest --cov=aider_lint_fixer --cov-report=html"' >> ~/.bashrc && \
    echo 'export PS1="[aider-dev] \w$ "' >> ~/.bashrc

# Expose no ports (this is a CLI tool)

# Set working directory to project root
WORKDIR /workspace

# Default command shows help and version
CMD ["python", "-m", "aider_lint_fixer", "--help"]